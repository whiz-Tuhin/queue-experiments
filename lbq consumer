
Partition Threads


run () {
    /* since all edges have to be processed
    * each thread shares an !! - AtomicLong - !! edgeCountDown
    * which is decremented upon processing of each edge
    * hence each thread should run until the edgeCountDown
    * reaches to 0 */

    while (edgeCountDown does not reach zero) {
        // take an element from the queue

        /* In case of a LBQ, the take() and put()
        * internally share 2 locks for wait based 
        * synchronization so we don't have to explicitly
        * program.
        */
        Edge edge = IOQueue.take()

        // decide Partition - will make the thread sleep
        decidePartition();
    
        // decrement edgeCounterDown
        decrement(edgeCountDown)

    }
}